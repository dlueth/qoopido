{"version":3,"file":"index.min.js","sources":["../../src/class/listener.js","../../src/class/event.js","../../src/validator/index.js","../../src/index.js"],"sourcesContent":["/**\n * Class Listener\n *\n * @param {Object} storage\n * @param {String|RegExp} identifier\n * @param {Function} callback\n * @param {Boolean=} prepend\n * @param {Number=} limit\n */\nfunction Listener(storage, identifier, callback, prepend, limit) {\n\tthis.identifier = identifier;\n\tthis.callback = callback;\n\tthis.timestamp = !prepend\n\t\t? +new Date()\n\t\t: (storage.timestamp = storage.timestamp - 1);\n\tthis.remaining = limit;\n}\n\nexport default Listener;\n","var weakmap = new WeakMap();\n\n/**\n * Class Event\n *\n * @param {String} name\n * @param {Emitter} context\n */\nfunction Event(name, context) {\n\tObject.defineProperty(this, \"name\", {\n\t\tvalue: name,\n\t\tenumerable: true,\n\t\tconfigurable: false,\n\t\twritable: false,\n\t});\n\n\tObject.defineProperty(this, \"context\", {\n\t\tvalue: context,\n\t\tenumerable: true,\n\t\tconfigurable: false,\n\t\twritable: false,\n\t});\n\n\tweakmap.set(this, { isCanceled: false });\n}\n\nEvent.prototype = {\n\t/**\n\t * Cancel an events processing immediately\n\t */\n\tcancel: function cancel() {\n\t\tweakmap.get(this).isCanceled = true;\n\t},\n\n\t/**\n\t * Retrieve an events cancelation state\n\t *\n\t * @returns {Boolean}\n\t */\n\tget isCanceled() {\n\t\treturn weakmap.get(this).isCanceled;\n\t},\n};\n\nexport default Event;\n","import { isArray, isRegExp, isString } from \"@qoopido/validator\";\n\n/**\n * Check if identifier is of valid tye\n *\n * @param {*} identifier\n *\n * @returns {Boolean}\n */\nfunction isIdentifier(identifier) {\n\treturn isString(identifier) || isRegExp(identifier) || isArray(identifier);\n}\n\nexport { isIdentifier };\n","import Listener from \"./class/listener\";\nimport Event from \"./class/event\";\nimport {\n\tisTypeof,\n\tisFunction,\n\tisString,\n\tisArray,\n\tisRegExp,\n\tisThenable,\n} from \"@qoopido/validator\";\nimport { isIdentifier } from \"./validator/index\";\n\nvar weakmap = new WeakMap();\n\n/**\n * Initialize a weakmap for a given context\n *\n * @param {Emitter} context\n *\n * @returns {Emitter}\n *\n * @ignore\n */\nfunction initialize(context) {\n\tweakmap.set(context, {\n\t\ttimestamp: +new Date(),\n\t\tevents: {},\n\t\texpressions: [],\n\t});\n\n\treturn context;\n}\n\n/**\n * Remove an event listener\n *\n * @param {Listener} listener\n * @param {Function} listener.callback\n *\n * @returns {Boolean}\n *\n * @ignore\n */\nfunction filterRemoveEvent(listener) {\n\treturn listener.callback !== this;\n}\n\n/**\n * Remove an expression listener\n *\n * @param {Listener} listener\n * @param {RegExp} listener.identifier\n * @param {Function} listener.callback\n *\n * @returns {Boolean}\n *\n * @ignore\n */\nfunction filterRemoveExpression(listener) {\n\treturn !(\n\t\tlistener.identifier.toString() === this.identifier.toString() &&\n\t\t(isTypeof(this.callback, \"undefined\") ||\n\t\t\tlistener.callback === this.callback)\n\t);\n}\n\n/**\n * Sort listener array\n *\n * @param {Object} a\n * @param {int} a.timestamp\n * @param {Object} b\n * @param {int} b.timestamp\n *\n * @returns {Number}\n *\n * @ignore\n */\nfunction sortListener(a, b) {\n\treturn a.timestamp - b.timestamp;\n}\n\n/**\n * Return a listeners callback\n *\n * @param {Listener} listener\n * @param {Function} listener.callback\n *\n * @returns {Function}\n *\n * @ignore\n */\nfunction mapListener(listener) {\n\treturn listener.callback;\n}\n\n/**\n * Apply an event + optional details to all listeners sequentually\n *\n * @param {Listener[]} listener\n * @param {Event} event\n * @param {*[]=} details\n *\n * @ignore\n */\nfunction applyEvent(listener, event, details) {\n\tvar self = this;\n\n\tlistener.reduce(function (previous, next) {\n\t\tif (!event.isCanceled) {\n\t\t\tif (next.remaining && !(next.remaining -= 1)) {\n\t\t\t\tself.off(next.identifier, next.callback);\n\t\t\t}\n\n\t\t\tif (isThenable(previous)) {\n\t\t\t\treturn previous.then(function () {\n\t\t\t\t\treturn next.callback.apply(this, [event].concat(details));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn next.callback.apply(this, [event].concat(details));\n\t\t}\n\t}, true);\n}\n\n/**\n * Subscribe an event listener\n *\n * @param {String} name\n * @param {Function} callback\n * @param {Boolean=} prepend\n * @param {Number=} limit\n *\n * @ignore\n */\nfunction subscribeEvent(name, callback, prepend, limit) {\n\t(this.events[name] = this.events[name] || []).push(\n\t\tnew Listener(this, name, callback, prepend, limit)\n\t);\n}\n\n/**\n * Unregister an event listener\n *\n * @param {String} name\n * @param {Function} callback\n *\n * @ignore\n */\nfunction unsubscribeEvent(name, callback) {\n\tif (!this.events[name]) {\n\t\treturn;\n\t}\n\n\tif (callback) {\n\t\tthis.events[name] = this.events[name].filter(\n\t\t\tfilterRemoveEvent,\n\t\t\tcallback\n\t\t);\n\t} else {\n\t\tthis.events[name].length = 0;\n\t}\n}\n\n/**\n * Subscribe an expression listener\n *\n * @param {RegExp} expression\n * @param {Function} callback\n * @param {Boolean=} prepend\n * @param {Number=} limit\n *\n * @ignore\n */\nfunction subscribeExpression(expression, callback, prepend, limit) {\n\tthis.expressions.push(\n\t\tnew Listener(this, expression, callback, prepend, limit)\n\t);\n}\n\n/**\n * Unsubscribe an expression listener\n *\n * @param {RegExp} expression\n * @param {Function} callback\n *\n * @ignore\n */\nfunction unsubscribeExpression(expression, callback) {\n\tthis.expressions = this.expressions.filter(filterRemoveExpression, {\n\t\tidentifier: expression,\n\t\tcallback: callback,\n\t});\n}\n\n/**\n * Retrieve all listeners for a certain event\n *\n * @param {String} name\n *\n * @returns {Listener[]}\n *\n * @ignore\n */\nfunction retrieveListener(name) {\n\tvar listener, storage;\n\n\tif (isString(name)) {\n\t\tstorage = weakmap.get(this);\n\t\tlistener = storage.events[name] ? storage.events[name].slice() : [];\n\n\t\tif (this !== Emitter) {\n\t\t\tlistener = listener.concat(retrieveListener.call(Emitter, name));\n\t\t}\n\n\t\tstorage.expressions.forEach((expression) => {\n\t\t\tif (expression.identifier.test(name)) {\n\t\t\t\tlistener.push(expression);\n\t\t\t}\n\t\t});\n\n\t\tlistener.sort(sortListener);\n\t}\n\n\treturn listener || [];\n}\n\n/**\n * Class Emitter\n */\nfunction Emitter() {\n\tinitialize(this);\n}\n\nEmitter.prototype = {\n\t/**\n\t * Emit an event\n\t *\n\t * @param {String} name\n\t * @param {...*} details\n\t *\n\t * @returns {Emitter}\n\t */\n\temit: function emit(name) {\n\t\tvar details = Array.prototype.slice.call(arguments, 1),\n\t\t\tlistener = retrieveListener.call(this, name);\n\n\t\tif (listener.length) {\n\t\t\tapplyEvent.call(this, listener, new Event(name, this), details);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Subscribe an event listener\n\t *\n\t * @param {String|RegExp|(String|RegExp)[]} identifier\n\t * @param {Function} callback\n\t * @param {Boolean=} prepend\n\t * @param {Number=} limit\n\t *\n\t * @returns {Emitter}\n\t */\n\ton: function on(identifier, callback, prepend, limit) {\n\t\treturn Emitter.on.call(this, identifier, callback, prepend, limit);\n\t},\n\n\t/**\n\t * Subscribe a once only event listener\n\t *\n\t * @param {String|RegExp|(String|RegExp)[]} identifier\n\t * @param {Function} callback\n\t * @param {Boolean=} prepend\n\t *\n\t * @returns {Emitter}\n\t */\n\tonce: function once(identifier, callback, prepend) {\n\t\treturn Emitter.once.call(this, identifier, callback, prepend);\n\t},\n\n\t/**\n\t * Subscribe a limited event listener\n\t *\n\t * @param {String|RegExp|(String|RegExp)[]} identifier\n\t * @param {Number} limit\n\t * @param {Function} callback\n\t * @param {Boolean=} prepend\n\t *\n\t * @returns {Emitter}\n\t */\n\tlimit: function limit(identifier, limit, callback, prepend) {\n\t\treturn Emitter.limit.call(this, identifier, limit, callback, prepend);\n\t},\n\n\t/**\n\t * Unsubscribe an event listener\n\t *\n\t * @param {String|RegExp|(String|RegExp)[]} identifier\n\t * @param {Function=} callback\n\t *\n\t * @returns {Emitter}\n\t */\n\toff: function off(identifier, callback) {\n\t\treturn Emitter.off.call(this, identifier, callback);\n\t},\n\n\t/**\n\t * Retrieve all listeners for a certain event\n\t *\n\t * @param {String} name\n\t *\n\t * @returns {Listener[]}\n\t */\n\tlistener: function listener(name) {\n\t\treturn Emitter.listener.call(this, name);\n\t},\n};\n\n/**\n * Subscribe an event listener\n *\n * @param {String|RegExp|(String|RegExp)[]} identifier\n * @param {Function} callback\n * @param {Boolean=} prepend\n * @param {Number=} limit\n *\n * @returns {Emitter}\n *\n * @static\n */\nEmitter.on = function on(identifier, callback, prepend, limit) {\n\tif (isIdentifier(identifier) && isFunction(callback)) {\n\t\tvar storage = weakmap.get(this);\n\n\t\tif (isString(identifier)) {\n\t\t\tsubscribeEvent.call(storage, identifier, callback, prepend, limit);\n\t\t}\n\n\t\tif (isRegExp(identifier)) {\n\t\t\tsubscribeExpression.call(\n\t\t\t\tstorage,\n\t\t\t\tidentifier,\n\t\t\t\tcallback,\n\t\t\t\tprepend,\n\t\t\t\tlimit\n\t\t\t);\n\t\t}\n\n\t\tif (isArray(identifier)) {\n\t\t\tidentifier.forEach((identifier) => {\n\t\t\t\tthis.on(identifier, callback, prepend, limit);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn this;\n};\n\n/**\n * Subscribe a once only event listener\n *\n * @param {String|RegExp|(String|RegExp)[]} identifier\n * @param {Function} callback\n * @param {Boolean=} prepend\n *\n * @returns {Emitter}\n *\n * @static\n */\nEmitter.once = function once(identifier, callback, prepend) {\n\treturn this.on(identifier, callback, prepend, 1);\n};\n\n/**\n * Subscribe a limited event listener\n *\n * @param {String|RegExp|(String|RegExp)[]} identifier\n * @param {Number} limit\n * @param {Function} callback\n * @param {Boolean=} prepend\n *\n * @returns {Emitter}\n *\n * @static\n */\nEmitter.limit = function limit(identifier, limit, callback, prepend) {\n\treturn this.on(identifier, callback, prepend, limit);\n};\n\n/**\n * Unsubscribe an event listener\n *\n * @param {String|RegExp|(String|RegExp)[]} identifier\n * @param {Function=} callback\n *\n * @returns {Emitter}\n *\n * @static\n */\nEmitter.off = function off(identifier, callback) {\n\tif (\n\t\tisIdentifier(identifier) &&\n\t\t(isFunction(callback) || isTypeof(callback, \"undefined\"))\n\t) {\n\t\tvar storage = weakmap.get(this);\n\n\t\tif (isString(identifier)) {\n\t\t\tunsubscribeEvent.call(storage, identifier, callback);\n\t\t}\n\n\t\tif (isRegExp(identifier)) {\n\t\t\tunsubscribeExpression.call(storage, identifier, callback);\n\t\t}\n\n\t\tif (isArray(identifier)) {\n\t\t\tidentifier.forEach((identifier) => {\n\t\t\t\tthis.off(identifier, callback);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn this;\n};\n\n/**\n * Retrieve all listeners for a certain event\n *\n * @param {String} name\n *\n * @returns {Listener[]}\n *\n * @static\n */\nEmitter.listener = function listener(name) {\n\treturn retrieveListener.call(this, name).map(mapListener);\n};\n\nexport default initialize(Emitter);\n"],"names":["Listener","storage","identifier","callback","prepend","limit","this","timestamp","Date","remaining","weakmap","WeakMap","Event","name","context","Object","defineProperty","value","enumerable","configurable","writable","set","isCanceled","isIdentifier","isString","isRegExp","isArray","prototype","cancel","get","initialize","events","expressions","filterRemoveEvent","listener","filterRemoveExpression","toString","isTypeof","sortListener","a","b","mapListener","applyEvent","event","details","self","reduce","previous","next","off","isThenable","then","apply","concat","subscribeEvent","push","unsubscribeEvent","filter","length","subscribeExpression","expression","unsubscribeExpression","retrieveListener","slice","Emitter","call","forEach","test","sort","emit","Array","arguments","on","once","isFunction","map"],"mappings":"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"}